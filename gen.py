# This script retrieves the Time Cube website source
# and generates a Markov chain as a JS file.

from bs4 import BeautifulSoup
import nltk

import requests
import re
import json

# GET site
req = requests.get('http://web.archive.org/web/20030219072854/http://timecube.com/')
if req.status_code != 200:
    raise Exception("ERROR %i" % req.status_code)

# Scrape + clean + tokenize
soup = BeautifulSoup(req.content, 'html.parser')
content = soup.find_all(['blockquote'])
text = '\n'.join([c.text for c in content])
data = nltk.word_tokenize(re.sub(r'[*\s]+|[\.\-]{2,}', ' ', text))
data = data[:data.index('E-MAIL')]
data.append('.')

# Max amt of prior tokens the chain should consider
# Increase/decrease to increase/decrease chaos
order = 4

chain = {'$ORDER': order}
queue = []

for token in data:
    if len(queue) > order:
        queue.pop(0)

    # generate keys in the chain
    # e.g.: "a b c" --> {"a b": ["c"], "b": ["c"]}
    for i in range(order):
        q = queue[i:]
        if len(q):
            key = ' '.join(q)
            if chain.get(key):
                chain[key].append(token)
            else:
                chain[key] = [token]

    queue.append(token)

# write to JS
f = open('./js/chain_data.js', 'w')
f.write('// generated by gen.py\nexport default %s' % json.dumps(chain))
f.close()
